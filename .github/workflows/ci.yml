name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_DATABASE: labo02_db
          MYSQL_USER: labo02
          MYSQL_PASSWORD: labo02
          MYSQL_ROOT_PASSWORD: root
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1 -uroot -proot"
          --health-interval=5s --health-timeout=5s --health-retries=30
      redis:
        image: redis:7
        ports:
          - 6379:6379
        options: >-
          --health-cmd="redis-cli ping || exit 1"
          --health-interval=5s --health-timeout=5s --health-retries=30

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Python deps
        run: |
          python -m pip install -U pip
          pip install -r requirements.txt
          # clients pour init DB/diagnostic
          sudo apt-get update
          sudo apt-get install -y mysql-client redis-tools netcat-openbsd

      - name: Wait for DB/Redis
        run: |
          for i in {1..60}; do
            nc -z 127.0.0.1 3306 && nc -z 127.0.0.1 6379 && exit 0
            sleep 2
          done
          echo "Services not ready" && exit 1

      - name: Initialize DB schema/data
        run: |
          if [ -d db-init ]; then
            for f in db-init/*.sql; do
              echo ">> Loading $f"
              mysql -h 127.0.0.1 -P 3306 -uroot -proot labo02_db < "$f"
            done
          fi

      - name: Run tests
        env:
          DB_HOST: 127.0.0.1
          DB_PORT: "3306"
          DB_NAME: labo02_db
          DB_USER: labo02
          DB_PASS: labo02
          REDIS_HOST: 127.0.0.1
          REDIS_PORT: "6379"
          REDIS_DB: "0"
          PYTHONPATH: src
        run: pytest -q
